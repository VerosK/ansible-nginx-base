# This file is generated automagically. Don't change, your changes will be overwrittern
#
# {{ ansible_managed }}
#

# {{ nginx_site.name }}

server {
{% if nginx_site.with_ssl|default(True) %}
        listen {{ nginx_site.https_port|default(443) }} ssl
        {%- if nginx_site.with_http2|default(True) %} http2 {% endif %}
        {%- if nginx_site.is_default|default(False) %} default_server {% endif %};
{% endif %}
{% if not nginx_site.with_ssl|default(True) or nginx_site.without_ssl|default(False) %}
        listen {{  nginx_site.http_port|default(80) }}
        {%- if nginx_site.is_default|default(False) %} default_server {% endif %};
{% endif %}

        server_name {{ nginx_site.name }}
        {%- if 'aliases' in nginx_site %}{% for alias in nginx_site.aliases %} {{ alias }}{% endfor %}{% endif %};
{% if nginx_site.default_log|default(True) %}
        access_log  /var/log/nginx/{{nginx_site.name}}-access_log main;
        error_log /var/log/nginx/{{nginx_site.name}}-error_log;
{% endif %}

{% if nginx_site.with_ssl|default(True) %}        {#  FIXME: parametrize this #}
    {% if nginx_site.request_acme_cert|default(True) %}
        ssl_certificate      /etc/pki/acme/{{ nginx_site.name }}/fullchain.pem;
        ssl_certificate_key  /etc/pki/acme/{{ nginx_site.name }}/key.pem;
    {% else %}
        ssl_certificate      /etc/pki/nginx/{{ nginx_site.name }}/fullchain.pem;
        ssl_certificate_key  /etc/pki/nginx/{{ nginx_site.name }}/key.pem;
    {% endif %}
    {% if nginx_site.ssl_config|default(False) %}
        {{ nginx_site.ssl_config|indent(8) }}
    {% endif %}

{% endif %}

{% if 'http_basic_auth' in nginx_site %}
        # protected location
        auth_basic "{{ nginx_site.name }} password required";
        auth_basic_user_file {{ _nginx_host_passwd_file }};
{% endif %}

{% if nginx_site.root_config|default(None) %}
        # Using custom root_config
{{ nginx_site.root_config|indent(8) }}
        # end of custom root_config
{% else %}
        location / {
{% if 'http_basic_auth' in nginx_site %}
                proxy_set_header X-Forwarded-User $remote_user;
{% endif %}
                root {{ _nginx_root }};
                client_max_body_size    128m;
        }
{% endif %}
        {{ nginx_acme_challenge|indent(8) }}
}

{% if nginx_site.with_ssl|default(True) and not nginx_site.without_ssl|default(False) %}
# create port 80 redirect
server {
        listen {{ nginx_site.http_port|default(80) }}
        {%- if nginx_site.is_default|default(False) %} default_server {% endif %};

        server_name {{ nginx_site.name }}
        {%- if 'aliases' in nginx_site %}{% for alias in nginx_site.aliases %} {{ alias }}{% endfor %}{% endif %};

        access_log  /var/log/nginx/{{nginx_site.name}}-80-access_log main;
        error_log /var/log/nginx/{{nginx_site.name}}-80-error_log;

{% if nginx_site.http_root_config is defined%}
{{ nginx_site.http_root_config|indent(8) }}
{% else %}
        location / {
            return 301 https://$host$request_uri;
        }
{% endif %}

      {{ nginx_acme_challenge|indent(4) }}
}
{% endif %}

{{ nginx_site.global_config|default('') }}
