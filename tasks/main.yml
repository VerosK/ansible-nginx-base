---
- name: Lookup variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: Set fact
  set_fact:
    nginx_user: '{{ nginx_user|default(_nginx_default_user) }}'
    nginx_group: '{{ nginx_group|default(_nginx_default_group) }}'

- name: Setup RedHat packages
  include_tasks: setup-RedHat.yml
  when: ansible_os_family == "RedHat"

- name: Setup Debian packages
  include_tasks: setup-Debian.yml
  when: ansible_os_family == "Debian"

- name: Enable ports 80 & 443
  firewalld:
    service: '{{ item }}'
    zone: public
    state: enabled
    permanent: true
    immediate: true
  with_items: [http, https]
  when: nginx_firewalld_enable
  ignore_errors: '{{ nginx_firewalld_ignore_errors }}'

- name: Create safe DH params
  include_tasks: nginx-dhparams.yml

- name: Create sites.d
  file:
    dest: "{{ nginx_sites_dir }}"
    state: directory
    mode: '{{ nginx_config_dir_permissions }}'
  when: nginx_sites_dir is defined

- name: Create passwords_dir
  file:
    dest: "{{ nginx_htpasswd_dir }}"
    state: directory
    mode: '{{ nginx_config_dir_permissions }}'
  when: nginx_htpasswd_dir is defined

- name: Drop default config
  file:
    dest: /etc/nginx/conf.d/default.conf
    state: absent
  notify: reload nginx
  tags: default_server

- name: Make sure empty config files exists
  include_tasks: nginx_static_site_preflight.yml
  with_items: '{{ nginx_sites }}'
  loop_control:
    loop_var: nginx_site

- name: Create master config
  template:
    dest: /etc/nginx/nginx.conf
    src: '{{ nginx_basic_template }}'
    backup: '{{ nginx_make_master_config_backup }}'
    mode: '{{ nginx_config_permissions }}'
  notify: reload nginx
  tags: nginx.master.config

- name: Create maps.conf
  template:
    src: nginx-maps.conf.j2
    dest: /etc/nginx/conf.d/maps.conf
    backup: '{{ nginx_make_map_config_backup }}'
    mode: '{{ nginx_config_permissions }}'
  notify: reload nginx
  when: nginx_global_maps
  tags: nginx-maps

- name: Create .well-known directory
  file:
    dest: /var/www/.well-known
    state: directory
    mode: '0755'

- name: Create static sites
  include_tasks: nginx_static_site.yml
  with_items: '{{ nginx_sites }}'
  loop_control:
    loop_var: nginx_site

- name: Enable nginx
  service:
    name: nginx
    enabled: true
    state: started

- meta: flush_handlers
