---
nginx_sites_dir: /etc/nginx/sites.d
nginx_htpasswd_dir: /etc/nginx/basic_auth.d
nginx_config_permissions: 0744
nginx_config_dir_permissions: 0755

nginx_deb_packages:
  - nginx

nginx_yum_repo: epel
nginx_yum_packages:
  - nginx

nginx_worker_process_count: 1
nginx_worker_connections: 768

nginx_acmesh_port: 5500
nginx_sebool_enable_connect: true

# nginx_user: nobody
# nginx_group: nobody

nginx_dhparam_bits: 2048

# make backup of master config?
nginx_make_master_config_backup: true
# backup maps config?
nginx_make_map_config_backup: true
# make backup of site configs?
nginx_make_config_backup: false

nginx_firewalld_enable: true
nginx_firewalld_ignore_errors: false

nginx_basic_template: nginx-main.conf.j2
nginx_sendfile_enable: true


# yamllint disable rule:line-length

nginx_acme_challenge: |
  # Add acme-challenge for LetsEncrypt
  location /.well-known/acme-challenge/ {
          proxy_pass http://127.0.0.1:{{ nginx_acmesh_port }}/.well-known/acme-challenge/;
  }

nginx_log_formats:
  - name: main
    format: |
      '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for" '
      'TR:$request_time US:$upstream_response_time'
  - name: json_combined
    escape: json
    format: |
      '{ "time_local": "$time_local", '
      '"remote_addr": "$remote_addr", '
      '"remote_user": "$remote_user", '
      '"request": "$request", '
      '"method": "$request_method", '
      '"request_uri": "$request_uri", '
      '"uri": "$uri", '
      '"http_protocol": "$server_protocol", '
      '"status": $status, '
      '"body_bytes_sent": $body_bytes_sent, '
      '"content_type": "$sent_http_content_type", '
      '"request_time": $request_time, '
      '"backend_time": "$upstream_response_time", '
      '"http_host": "$http_host", '
      '"http_referrer": "$http_referer", '
      '"http_user_agent": "$http_user_agent" }'
  - name: prometheus
    format: |
      'time:$request_time backend_time:$upstream_response_time status=$status host="$host" method="$request_method"'

nginx_default_ssl_config: |
  # TLS config from
  # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.14.0&openssl=1.0.1e&hsts=yes&profile=intermediate

  ssl_session_cache shared:SSL:20m;
  ssl_session_timeout  5m;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  ssl_dhparam /etc/nginx/dhparams.pem;


nginx_sites: []
# nginx_sites: []
#  - name: example.site.cz
#    root: /opt/example/html/
#  - name: gitlab.toaster.cz
#    aliases: [ www.gitlab.toaster.cz ]
#    is_default: true
#    with_ssl: true
#    without_ssl: false
#    request_acme_cert: true
#    http_basic_auth:
#        foo: $apr1$bIt0YLXq$ZNnbl5xVAZgA6Mz2.qa4i/
#        bar:  $apr1$bIt0YLXq$ZNnbl5xVAZgA6Mz2.qa4i/
#    root_config: >
#        location / {
#                proxy_pass http://127.0.0.1:{{ gitlab_http_port }}/;
#                proxy_read_timeout 90;
#                proxy_set_header Host        $http_host;
#                proxy_set_header X-Forwarded-For $remote_addr;
#                proxy_set_header X-Forwarded-Proto "https";
#        #       proxy_set_header X-Forwarded-User $remote_user;
#
#                client_max_body_size    128m;
#        }


# Restart when all files are changed
nginx_less_restarts: true


nginx_global_maps:
  - comment: upstream_http_content_security_policy
    source: $upstream_http_content_security_policy
    target_variable: $content_security_policy
    keys: |
      "~."      $upstream_http_content_security_policy;
      default    "frame-ancestors 'self'";

  - comment: Override $upstream_http_x_frame_options
    source: $upstream_http_x_frame_options
    target_variable: $x_frame_options
    keys: |
      "~."       $upstream_http_x_frame_options;
      default    "SAMEORIGIN";
